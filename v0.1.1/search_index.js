var documenterSearchIndex = {"docs":
[{"location":"submissions/#List-of-submissions","page":"List of submissions","title":"List of submissions","text":"","category":"section"},{"location":"submissions/","page":"List of submissions","title":"List of submissions","text":"It follows the code and plot of the RainGauge of all RainMaker submissions to /submissions sorted in alphabetical order of the filename.","category":"page"},{"location":"submissions/#Charlotte-Merchant:-The-Rapture:-Big-Super-Mega-Ultra-Clapped-Humid-North-Sea-Mountain-HR-Injection-Under-More-Pressure-Initially-and-Corrected","page":"List of submissions","title":"Charlotte Merchant: The Rapture: Big Super Mega Ultra Clapped Humid North Sea Mountain HR Injection Under More Pressure Initially and Corrected","text":"","category":"section"},{"location":"submissions/","page":"List of submissions","title":"List of submissions","text":"path: /submissions/the_rapture.jl","category":"page"},{"location":"submissions/","page":"List of submissions","title":"List of submissions","text":"rank: 1. of 16 submissions","category":"page"},{"location":"submissions/","page":"List of submissions","title":"List of submissions","text":"using CairoMakie # hide\n# 1. All precipitation measured by the rain gauge has to be simulated by SpeedyWeather over a 20-day period.\n# 2. The rain gauge must be placed at the agreed longitude and latitude coordinates.\n# 3. No changes to the following physics inside SpeedyWeather: Large-scale condensation, convection, surface evaporation, or radiation.\n# 4. Sea and land surface temperatures cannot exceed 305K anywhere during the simulation.\n# 5. The simulation must remain stable over the 20-day period.\nauthor = \"Charlotte Merchant\"\ndescription = \"The Rapture: Big Super Mega Ultra Clapped Humid North Sea Mountain HR Injection Under More Pressure Initially and Corrected\"\n\nusing SpeedyWeather, RainMaker\n\nspectral_grid = SpectralGrid(trunc=100, nlayers=8)\natm = EarthAtmosphere(spectral_grid)\nclausius_clapeyron = ClausiusClapeyron(spectral_grid, atm, e₀=0.00001)\nmodel = PrimitiveWetModel(spectral_grid; clausius_clapeyron)\n\nBase.@kwdef struct inject <: SpeedyWeather.AbstractCallback\n    schedule::Schedule = Schedule(every=Hour(1))\nend\n\nfunction SpeedyWeather.initialize!(\n    callback::inject,\n    progn::PrognosticVariables,\n    diagn::DiagnosticVariables,\n    model::AbstractModel,\n)\n    initialize!(callback.schedule, progn.clock)\nend\n\nfunction SpeedyWeather.callback!(\n    callback::inject,\n    progn::PrognosticVariables,\n    diagn::DiagnosticVariables,\n    model::AbstractModel,\n)\n    isscheduled(callback.schedule, progn.clock) || return nothing\n    \n    set!(progn, model.geometry, humid=(λ, φ, σ) -> 0.16)\n    set!(progn, model.geometry, temp=(λ, φ, σ) -> σ == 1 ? 305 : (σ > 0.8 ? 305 - 10 * (1 - σ) : (σ > 0.5 ? 290 + 5 * (1 - σ) : 250)))\n\tset!(progn, model.geometry, u=(λ, φ, σ) -> -5.0)\n\tset!(progn, model.geometry, v=(λ, φ, σ) -> 2.0)\n    set!(progn, model.geometry, div=(λ, φ, σ) -> σ > 0.8 ? -0.005 : (σ > 0.5 ? 0.0 : 0.005))\n\tset!(progn, model.geometry, pres=20)\nend\n\nSpeedyWeather.finalize!(::inject, args...) = nothing\n\nrain_gauge = RainGauge(spectral_grid, lond=-1.25, latd=51.75)\nadd!(model, rain_gauge)\n\nadd!(model, inject())\n\nsimulation = initialize!(model)\n\nH, λ₀, φ₀, σ = 4000, 2, 51, 5\nset!(model, orography=(λ,φ) -> H*exp(-spherical_distance((λ,φ), (λ₀,φ₀), radius=360/2π)^2/2σ^2))\n\nset!(simulation, humid=0.16)\nset!(simulation, pres=20)\n\nrun!(simulation, period=Day(20))\n\nRainMaker.plot(rain_gauge)\nRainMaker.plot(rain_gauge) # hide\nsave(\"submission_the_rapture.png\", ans) # hide\nnothing # hide","category":"page"},{"location":"submissions/","page":"List of submissions","title":"List of submissions","text":"(Image: submission: the_rapture)","category":"page"},{"location":"submissions/#Danny-Ash,-Jowan-Fromentin-Brain-Drain:-Rain-Rain-go-away","page":"List of submissions","title":"Danny Ash, Jowan Fromentin - Brain Drain: Rain Rain go away","text":"","category":"section"},{"location":"submissions/","page":"List of submissions","title":"List of submissions","text":"path: /submissions/brain_drain.jl","category":"page"},{"location":"submissions/","page":"List of submissions","title":"List of submissions","text":"rank: 2. of 16 submissions","category":"page"},{"location":"submissions/","page":"List of submissions","title":"List of submissions","text":"using CairoMakie # hide\nmountain_positions_canada = [\n    (-3.35, 58.67), \n    (-4.87, 61.61), \n    (-6.74, 64.60), \n    (-9.12, 67.60), \n    (-12.22, 70.58), \n    (-16.39, 73.50), \n    (-22.23, 76.30), \n    (-30.76, 78.87), \n    (-43.59, 81.04), \n    (-62.35, 82.50)\n]\nauthor = \"Danny Ash, Jowan Fromentin - Brain Drain\"\ndescription = \"Rain Rain go away\"\n\nusing SpeedyWeather, RainMaker\nusing CairoMakie\n\nspectral_grid = SpectralGrid(trunc=31, nlayers=5)\ntime_stepping = Leapfrog(spectral_grid, Δt_at_T31=Minute(0.5))\n# define aquaplanet\nocean = AquaPlanet(spectral_grid, temp_equator=200, temp_poles=305)\nland_sea_mask = AquaPlanetMask(spectral_grid)\norography = NoOrography(spectral_grid)\nmodel = PrimitiveWetModel(spectral_grid; ocean, land_sea_mask, orography, time_stepping=time_stepping)\n\nrain_gauge = RainGauge(spectral_grid, lond=-1.25, latd=51.75)\nadd!(model, rain_gauge)\n\nsimulation = initialize!(model)\nset!(simulation, humid=6, pres =15.1)\n\n# build the wall\nH, λ₀, φ₀, σ = 8000, 2, 51, 1     # height, lon, lat position, and width\nH_c = 5000\nset!(model, orography=(λ, φ) -> begin\norography = 0.0\nfor (λ₀, φ₀) in mountain_positions_canada\n    orography += H_c * exp(-spherical_distance((λ, φ), (λ₀, φ₀), radius=360/2π)^2 / 2σ^2)\nend\norography\nend, add=true)\n\nset!(model, orography=(λ, φ) -> begin\norography = 0.0\nmountain_positions = [(0, 50), (1, 50), (2, 50), (0, 55), (1, 55), (2, 55), (0, 60), (1, 60)]\nfor (λ₀, φ₀) in mountain_positions\n    orography += H * exp(-spherical_distance((λ, φ), (λ₀, φ₀), radius=360/2π)^2 / 2σ^2)\nend\norography\nend, add=true)\n\n\n\n\n# dig the hole\nH, λ₀, φ₀, σ = -6000, -1.25, 51.75, 100.5     # height, lon, lat position, and width\nset!(model, orography=(λ,φ) -> H*exp((-(λ-λ₀)^2 - (φ-φ₀)^2)/2σ^2), add=true)\n\n\nrun!(simulation, period=Day(20))\ntotal_precip = maximum(rain_gauge.accumulated_rain_large_scale) + maximum(rain_gauge.accumulated_rain_convection)\n\nprintln(total_precip)\nRainMaker.plot(rain_gauge)\n\n# heatmap(model.orography.orography)\n# println(maximum(simulation.prognostic_variables.ocean.sea_surface_temperature))\nRainMaker.plot(rain_gauge) # hide\nsave(\"submission_brain_drain.png\", ans) # hide\nnothing # hide","category":"page"},{"location":"submissions/","page":"List of submissions","title":"List of submissions","text":"(Image: submission: brain_drain)","category":"page"},{"location":"submissions/#Amy-and-breddy:-Reddy4rain","page":"List of submissions","title":"Amy and breddy: Reddy4rain","text":"","category":"section"},{"location":"submissions/","page":"List of submissions","title":"List of submissions","text":"path: /submissions/reddy4rain.jl","category":"page"},{"location":"submissions/","page":"List of submissions","title":"List of submissions","text":"rank: 3. of 16 submissions","category":"page"},{"location":"submissions/","page":"List of submissions","title":"List of submissions","text":"using CairoMakie # hide\n\nauthor = \"Amy and breddy\"\ndescription = \"Reddy4rain\"\n\nusing SpeedyWeather, RainMaker\n\nspectral_grid = SpectralGrid(trunc=12, nlayers=3, Grid=FullGaussianGrid)  # default resolution\nrain_gauge = RainGauge(spectral_grid, lond=358.75, latd=51.75)\n\nmodel = PrimitiveWetModel(spectral_grid)\n\nmodel.callbacks\n\nsimulation = initialize!(model, time=DateTime(2024, 10, 1))\n\n# (; a, b) = struct unpacks the fields a, b in struct identified by name, equivalent to\n# a = struct.a and b = struct.b\n(; precip_large_scale, precip_convection) = simulation.diagnostic_variables.physics\ntotal_precipitation = precip_large_scale + precip_convection\ntotal_precipitation *= 1000# convert m to mm\n\n# add two Gaussian mountains\nλ1, λ2 = (320, 345)    # longitude positions [˚E]\nφ₀ = 50                 # latitude [˚N]\\\nσ = 5                 # width [˚]\nH = 7000\n\n# first mountain, radius=360/2π to have distance in ˚ again (not meters)\nset!(model, orography=(λ,φ) -> H*exp(-spherical_distance((λ,φ), (λ1,φ₀), radius=360/2π)^2/2σ^2), add=true)\n\n# and add second\nset!(model, orography=(λ,φ) -> H*exp(-spherical_distance((λ,φ), (λ2,φ₀), radius=360/2π)^2/2σ^2), add=true)\n\nsimulation.diagnostic_variables.physics.precip_large_scale .= 0\nsimulation.diagnostic_variables.physics.precip_convection .= 0\n\nset!(simulation, sea_surface_temperature=(λ, φ) -> (30 < φ < 60) && (300 < λ < 360) ? 2 : 0, add=true)\n\n# add one rain gauge the measures the whole simulation\nrain_gauge_from_beginning  = RainGauge(spectral_grid, lond=-1.25, latd=51.75)\nadd!(model, rain_gauge_from_beginning)\n\nrun!(simulation, period=Week(1))\n\n# add one rain gauge the measures the whole simulation\nrain_gauge_from_w2 = RainGauge(spectral_grid, lond=-1.25, latd=51.75)\nadd!(model, rain_gauge_from_w2)\n\nrun!(simulation, period=Week(2))\n\nset!(simulation, humid=0.3, pres=15.1)\n\n# add another rain gauge that only starts measuring\n# after that week we already simulated\nrain_gauge_after_spinup  = RainGauge(spectral_grid, lond=-1.25, latd=51.75)\nadd!(model, rain_gauge_after_spinup)\nadd!(model, rain_gauge)\nrun!(simulation, period=Day(20))\n\n# now compare them, from the beginning\nrain_gauge_from_beginning\nRainMaker.plot(rain_gauge) # hide\nsave(\"submission_reddy4rain.png\", ans) # hide\nnothing # hide","category":"page"},{"location":"submissions/","page":"List of submissions","title":"List of submissions","text":"(Image: submission: reddy4rain)","category":"page"},{"location":"submissions/#Isaac-Campbell:-Up-initial-humidity-and-lower-saturation-vapour-pressure.","page":"List of submissions","title":"Isaac Campbell: Up initial humidity and lower saturation vapour pressure.","text":"","category":"section"},{"location":"submissions/","page":"List of submissions","title":"List of submissions","text":"path: /submissions/isaaccampbell.jl","category":"page"},{"location":"submissions/","page":"List of submissions","title":"List of submissions","text":"rank: 4. of 16 submissions","category":"page"},{"location":"submissions/","page":"List of submissions","title":"List of submissions","text":"using CairoMakie # hide\nauthor = \"Isaac Campbell\"\ndescription = \"Up initial humidity and lower saturation vapour pressure.\"\n\nusing SpeedyWeather, RainMaker\n\n# Create grid\nspectral_grid = SpectralGrid(trunc=31, nlayers=8)\n\n# Alter the laws of physics... lower saturation vapour pressure to 50Pa\natm = EarthAtmosphere(spectral_grid)\nclausius_clapeyron = ClausiusClapeyron(spectral_grid, atm, e₀=50)\n\nmodel = PrimitiveWetModel(spectral_grid; clausius_clapeyron)\n\n# add the rain gauge as callback\nrain_gauge = RainGauge(spectral_grid, lond=-1.25, latd=51.75)\nadd!(model, rain_gauge)\n\n# run the simulation\nsimulation = initialize!(model, time=DateTime(2000, 8, 1))\n\n# Increase initial humidity\nset!(simulation, humid=0.177)\nrun!(simulation, period=Day(20))\n\n# visualise \nRainMaker.plot(rain_gauge)\n\nRainMaker.plot(rain_gauge) # hide\nsave(\"submission_isaaccampbell.png\", ans) # hide\nnothing # hide","category":"page"},{"location":"submissions/","page":"List of submissions","title":"List of submissions","text":"(Image: submission: isaaccampbell)","category":"page"},{"location":"submissions/#Alex-Dobra-and-Charlotte-Wargniez:-Aqua-planet,-change-humidity-to-ridiculous-number,-add-Shirin's-mountain,-make-it-cold","page":"List of submissions","title":"Alex Dobra and Charlotte Wargniez: Aqua planet, change humidity to ridiculous number, add Shirin's mountain, make it cold","text":"","category":"section"},{"location":"submissions/","page":"List of submissions","title":"List of submissions","text":"path: /submissions/ac_humid.jl","category":"page"},{"location":"submissions/","page":"List of submissions","title":"List of submissions","text":"rank: 5. of 16 submissions","category":"page"},{"location":"submissions/","page":"List of submissions","title":"List of submissions","text":"using CairoMakie # hide\nauthor = \"Alex Dobra and Charlotte Wargniez\"\ndescription = \"Aqua planet, change humidity to ridiculous number, add Shirin's mountain, make it cold\"\n\nusing SpeedyWeather, RainMaker\n\nspectral_grid = SpectralGrid(trunc=31, nlayers=5)\nmodel = PrimitiveWetModel(spectral_grid)\n\n# Set up aqauaplanet but add large mountain in \"North Sea\" after initialization!\nocean = AquaPlanet(spectral_grid, temp_equator=305, temp_poles=305\n)\nland = ConstantLandTemperature(spectral_grid, temperature=275)\nmodel = PrimitiveWetModel(spectral_grid; ocean, land)\n\n# Add rain gauge\nrain_gauge = RainGauge(spectral_grid, lond=-1.25, latd=51.75)\nadd!(model, rain_gauge)\n\n# Initialize and run simulation\nsimulation = initialize!(model, time=DateTime(2000, 6, 21))\n\n# Add mountain now! details for mountain\nH, λ₀, φ₀, σ = 5000, 2, 51, 3     # height, lon, lat position, and width\nset!(model, orography=(λ,φ) -> H*exp(-spherical_distance((λ,φ), (λ₀,φ₀), radius=360/2π)^2/2σ^2))\n\n# make mountain Land\nset!(model, land_sea_mask=(λ, φ) -> H*exp(-spherical_distance((λ,φ), (λ₀,φ₀), radius=360/2π)^2/2σ^2), add=true)\n\n\n# set humidity\nset!(simulation, humid=9e-2,\n# temp=275\n)\n\n# Run simulation for 20 days\nrun!(simulation, period=Day(20))\n\nRainMaker.plot(rain_gauge, rate_Δt=Hour(1))\nRainMaker.plot(rain_gauge) # hide\nsave(\"submission_ac_humid.png\", ans) # hide\nnothing # hide","category":"page"},{"location":"submissions/","page":"List of submissions","title":"List of submissions","text":"(Image: submission: ac_humid)","category":"page"},{"location":"submissions/#Minqi:-humid-and-montain","page":"List of submissions","title":"Minqi: humid & montain","text":"","category":"section"},{"location":"submissions/","page":"List of submissions","title":"List of submissions","text":"path: /submissions/minqi_submission.jl","category":"page"},{"location":"submissions/","page":"List of submissions","title":"List of submissions","text":"rank: 6. of 16 submissions","category":"page"},{"location":"submissions/","page":"List of submissions","title":"List of submissions","text":"using CairoMakie # hide\nauthor = \"Minqi\"\ndescription = \"humid & montain\"\n\nusing SpeedyWeather, RainMaker\nspectral_grid = SpectralGrid(trunc=25, nlayers=8)\ntime_stepping = Leapfrog(spectral_grid, Δt_at_T31=Minute(10))\nmodel = PrimitiveWetModel(spectral_grid; time_stepping)\n\nrain_gauge = RainGauge(spectral_grid, lond=-1.25, latd=51.75)\nadd!(model, rain_gauge)\n\nsimulation = initialize!(model)\nset!(simulation, humid=0.185)\nH, λ₀, φ₀, σ = 10000, 2, 51, 1  \nset!(model, orography=(λ,φ) -> H*exp(-spherical_distance((λ,φ), (λ₀,φ₀), radius=360/2π)^2/2σ^2))\n\nrun!(simulation, period=Day(20))\nRainMaker.plot(rain_gauge) # hide\nsave(\"submission_minqi_submission.png\", ans) # hide\nnothing # hide","category":"page"},{"location":"submissions/","page":"List of submissions","title":"List of submissions","text":"(Image: submission: minqi_submission)","category":"page"},{"location":"submissions/#Maren:-Hot-aqua-planet-with-SST-anomalie","page":"List of submissions","title":"Maren: Hot aqua planet with SST anomalie","text":"","category":"section"},{"location":"submissions/","page":"List of submissions","title":"List of submissions","text":"path: /submissions/maren.jl","category":"page"},{"location":"submissions/","page":"List of submissions","title":"List of submissions","text":"rank: 7. of 16 submissions","category":"page"},{"location":"submissions/","page":"List of submissions","title":"List of submissions","text":"using CairoMakie # hide\nauthor = \"Maren\"\ndescription = \"Hot aqua planet with SST anomalie\"\n\nusing SpeedyWeather, RainMaker\nusing CairoMakie\n\n# create a model\nspectral_grid = SpectralGrid(trunc=31, nlayers=8)\nocean = AquaPlanet(spectral_grid, temp_equator = 300.0, temp_poles= 300.0)\nmodel = PrimitiveWetModel(spectral_grid; ocean)\n\n# add the rain gauge as callback\nrain_gauge = RainGauge(spectral_grid, lond=-1.25, latd=51.75)\nadd!(model, rain_gauge)\n\nsimulation = initialize!(model)\nset!(simulation, humid=0.18)\nset!(simulation, sea_surface_temperature=(λ, φ) -> (50 < φ < 53) && (50 < λ < 60) ? 5 : 0, add=true)\nrun!(simulation, period=Day(20))\nRainMaker.plot(rain_gauge) # hide\nsave(\"submission_maren.png\", ans) # hide\nnothing # hide","category":"page"},{"location":"submissions/","page":"List of submissions","title":"List of submissions","text":"(Image: submission: maren)","category":"page"},{"location":"submissions/#George:-default","page":"List of submissions","title":"George: default","text":"","category":"section"},{"location":"submissions/","page":"List of submissions","title":"List of submissions","text":"path: /submissions/grabin.jl","category":"page"},{"location":"submissions/","page":"List of submissions","title":"List of submissions","text":"rank: 8. of 16 submissions","category":"page"},{"location":"submissions/","page":"List of submissions","title":"List of submissions","text":"using CairoMakie # hide\nauthor = \"George\"\n\nusing SpeedyWeather, RainMaker\n\n# create a model\nspectral_grid = SpectralGrid(trunc=31, nlayers=8)\nocean = AquaPlanet(spectral_grid)\nland = ConstantLandTemperature(spectral_grid)\nmodel = PrimitiveWetModel(spectral_grid; ocean)\n\n# add the rain gauge as callback\nrain_gauge = RainGauge(spectral_grid, lond=-1.25, latd=51.75)\nadd!(model, rain_gauge)\n\n# run the simulation\nsimulation = initialize!(model, time=DateTime(2000, 10, 25))\nsimulation.prognostic_variables.clock\n\n# CHANGING sea surface and land temperature\nsimulation = initialize!(model)\nset!(model, land_sea_mask=0)    # all ocean\nset!(simulation, sea_surface_temperature=(λ, φ) -> (30 < φ < 60) && (270 < λ < 360) ? 1 : 0, add=true)\n\nsimulation = initialize!(model)\nset!(model, land_sea_mask=1)    # all land\nset!(simulation, sea_surface_temperature=(λ, φ) -> (0 < φ < 360) && (270 < λ < 360) ? 10 : 0, add=true)\n\nsst = simulation.prognostic_variables.ocean.sea_surface_temperature\n\n# ADDING A mountain\nH, λ₀, φmax = 2000, 15, 60\n\n# set to a global constant\nset!(model, orography=0)\n\n# add two Gaussian mountains\nλ1, λ2  = (120, 240)    # longitude positions [˚E]\nφ₀ = 44                 # latitude [˚N]\nσ = 7.4                  # width [˚] \n\n# himalayan mountains lead to more rain than ones in eastern europe...\n\n# first mountain, radius=360/2π to have distance in ˚ again (not meters)\nset!(model, orography=(λ,φ) -> H*exp(-spherical_distance((λ,φ), (λ1,φ₀), radius=360/2π)^2/2σ^2), add=true)\n\n# and add second\nset!(model, orography=(λ,φ) -> H*exp(-spherical_distance((λ,φ), (λ2,φ₀), radius=360/2π)^2/2σ^2), add=true)\nset!(simulation, humid=0.18)\nrun!(simulation, period=Day(20))\n\nRainMaker.plot(rain_gauge) # hide\nsave(\"submission_grabin.png\", ans) # hide\nnothing # hide","category":"page"},{"location":"submissions/","page":"List of submissions","title":"List of submissions","text":"(Image: submission: grabin)","category":"page"},{"location":"submissions/#Thomas-Stone:-Humid","page":"List of submissions","title":"Thomas Stone: Humid","text":"","category":"section"},{"location":"submissions/","page":"List of submissions","title":"List of submissions","text":"path: /submissions/thomas.jl","category":"page"},{"location":"submissions/","page":"List of submissions","title":"List of submissions","text":"rank: 9. of 16 submissions","category":"page"},{"location":"submissions/","page":"List of submissions","title":"List of submissions","text":"using CairoMakie # hide\nauthor = \"Thomas Stone\"\ndescription = \"Humid\"\n\nusing SpeedyWeather, RainMaker\n\n# create a model\nspectral_grid = SpectralGrid(trunc=31, nlayers=8)\nocean = AquaPlanet(spectral_grid)\nmodel = PrimitiveWetModel(spectral_grid; ocean)\n\n# add the rain gauge as callback\nrain_gauge = RainGauge(spectral_grid, lond=-1.25, latd=51.75)\nadd!(model, rain_gauge)\n\n# run the simulation\nsimulation = initialize!(model, time=DateTime(2000,10,25))\nsimulation.prognostic_variables.clock\n\n# add 2 K to N Atlantic\nsimulation = initialize!(model)\nset!(model, land_sea_mask=0)    # all ocean!\nset!(simulation, sea_surface_temperature=(λ, φ) -> (30 < φ < 60) && (270 < λ < 360) ? 10 : 0, add=true)\n\n\n# set to a global constant\nset!(model, orography=0)\n\n# add two 2000m ridges at +-30˚E from 60˚S to 60˚N\nH, λ₀, φmax = 20000, 15, 60\n\n# add two Gaussian mountains\nλ1, λ2  = (120, 240)    # longitude positions [˚E]\nφ₀ = 44                 #latitude\nσ = 7.4               # width [˚]\n\n# first mountain, radius=360/2π to have distance in ˚ again (not meters)\nset!(model, orography=(λ,φ) -> H*exp(-spherical_distance((λ,φ), (λ1,φ₀), radius=360/2π)^2/2σ^2), add=true)\n\n# and add second\nset!(model, orography=(λ,φ) -> H*exp(-spherical_distance((λ,φ), (λ2,φ₀), radius=360/2π)^2/2σ^2), add=true)\n\nset!(simulation, humid=0.18)\nrun!(simulation, period=Day(20))\n\n\n# visualise \nRainMaker.plot(rain_gauge)\nRainMaker.plot(rain_gauge) # hide\nsave(\"submission_thomas.png\", ans) # hide\nnothing # hide","category":"page"},{"location":"submissions/","page":"List of submissions","title":"List of submissions","text":"(Image: submission: thomas)","category":"page"},{"location":"submissions/#Bradley-and-Lukas:-big-humid","page":"List of submissions","title":"Bradley and Lukas: big humid","text":"","category":"section"},{"location":"submissions/","page":"List of submissions","title":"List of submissions","text":"path: /submissions/big_humid.jl","category":"page"},{"location":"submissions/","page":"List of submissions","title":"List of submissions","text":"rank: 10. of 16 submissions","category":"page"},{"location":"submissions/","page":"List of submissions","title":"List of submissions","text":"using CairoMakie # hide\nauthor = \"Bradley and Lukas\"\ndescription = \"big humid\"\n\nusing SpeedyWeather, RainMaker\n\nspectral_grid = SpectralGrid(trunc=60, nlayers=8) #60\n\nocean = AquaPlanet(spectral_grid, temp_equator=302, temp_poles=300)\nmodel = PrimitiveWetModel(spectral_grid; ocean=ocean)\n\nrain_gauge = RainGauge(spectral_grid, lond=-1.25, latd=51.75)\nadd!(model, rain_gauge)\n\nsimulation = initialize!(model)\n\n\nH, λ₀, φ₀, σ = 4000, 2, 51, 5    # height, lon, lat position, and width\nset!(model, orography=(λ,φ) -> H*exp(-spherical_distance((λ,φ), (λ₀,φ₀), radius=360/2π)^2/2σ^2))\n\n\nset!(simulation, humid=0.12)\n\nrun!(simulation, period=Day(20))\n\n\nRainMaker.plot(rain_gauge) # hide\nsave(\"submission_big_humid.png\", ans) # hide\nnothing # hide","category":"page"},{"location":"submissions/","page":"List of submissions","title":"List of submissions","text":"(Image: submission: big_humid)","category":"page"},{"location":"submissions/#Jordan:-Up-initial-humidity-and-lower-saturation-vapour-pressure.","page":"List of submissions","title":"Jordan: Up initial humidity and lower saturation vapour pressure.","text":"","category":"section"},{"location":"submissions/","page":"List of submissions","title":"List of submissions","text":"path: /submissions/jordan.jl","category":"page"},{"location":"submissions/","page":"List of submissions","title":"List of submissions","text":"rank: 11. of 16 submissions","category":"page"},{"location":"submissions/","page":"List of submissions","title":"List of submissions","text":"using CairoMakie # hide\nauthor = \"Jordan\"\n\nusing SpeedyWeather, RainMaker\n\nspectral_grid = SpectralGrid(trunc=31, nlayers=8)\n\nocean = AquaPlanet(spectral_grid, temp_equator=302, temp_poles=301)\nland = ConstantLandTemperature(spectral_grid)\n\nmodel = PrimitiveWetModel(spectral_grid; ocean, land)\n\n# add the rain gauge as callback\nrain_gauge = RainGauge(spectral_grid, lond=-1.25, latd=51.75)\nadd!(model, rain_gauge)\n\nsimulation = initialize!(model)\nset!(model, land_sea_mask=0)    # all ocean!\nset!(simulation, sea_surface_temperature=(λ, φ) -> (10 < φ < 20) && (52 < λ < 58) ? 3 : 0.5, add=true)\n\n# set to a global constant\nset!(model, orography=0)\n\nH, λ₀, φmax = 10000, 15, 60\n\n# add two Gaussian mountains\nλ1, λ2  = (120, 240)    # longitude positions [˚E]\nφ₀ = 45                 # latitude [˚N]\nσ = 5                   # width [˚]\n\n# first mountain, radius=360/2π to have distance in ˚ again (not meters)\nset!(model, orography=(λ,φ) -> H*exp(-spherical_distance((λ,φ), (λ1,φ₀), radius=360/2π)^2/2σ^2), add=true)\n\nset!(simulation, humid=0.15)\n\nrun!(simulation, period=Day(20))\n\nRainMaker.plot(rain_gauge) # hide\nsave(\"submission_jordan.png\", ans) # hide\nnothing # hide","category":"page"},{"location":"submissions/","page":"List of submissions","title":"List of submissions","text":"(Image: submission: jordan)","category":"page"},{"location":"submissions/#Shirin-Ermis:-Aqua-planet-simulation-with-a-mountain","page":"List of submissions","title":"Shirin Ermis: Aqua-planet simulation with a mountain","text":"","category":"section"},{"location":"submissions/","page":"List of submissions","title":"List of submissions","text":"path: /submissions/aquaplanet_mountain.jl","category":"page"},{"location":"submissions/","page":"List of submissions","title":"List of submissions","text":"rank: 12. of 16 submissions","category":"page"},{"location":"submissions/","page":"List of submissions","title":"List of submissions","text":"using CairoMakie # hide\nauthor = \"Shirin Ermis\"\ndescription = \"Aqua-planet simulation with a mountain\"\n\nusing SpeedyWeather, RainMaker\n\nspectral_grid = SpectralGrid(trunc=31, nlayers=10)\nmodel = PrimitiveWetModel(spectral_grid)\n\n# Set up aqauaplanet but add large mountain in \"North Sea\" after initialization!\nocean = AquaPlanet(spectral_grid, temp_equator=302, temp_poles=300)\nland_sea_mask = AquaPlanetMask(spectral_grid)\nmodel = PrimitiveWetModel(spectral_grid; ocean, land_sea_mask)\n\n# Add rain gauge\nrain_gauge = RainGauge(spectral_grid, lond=-1.25, latd=51.75)\nadd!(model, rain_gauge)\n\n# Initialize and run simulation\nsimulation = initialize!(model, time=DateTime(2000, 9, 1))\n\n# Add mountain now! details for mountain\nH, λ₀, φ₀, σ = 4000, 2, 51, 5     # height, lon, lat position, and width\nset!(model, orography=(λ,φ) -> H*exp(-spherical_distance((λ,φ), (λ₀,φ₀), radius=360/2π)^2/2σ^2))\n\n# Run simulation for 20 days\nrun!(simulation, period=Day(20))\n\n# Plot the results (not needed for submission but doesn't hurt!)\nusing CairoMakie\n# heatmap(model.orography.orography, title=\"My orogoraphy [m]\") # check orography\nRainMaker.plot(rain_gauge, rate_Δt=Hour(1))\n\nRainMaker.plot(rain_gauge) # hide\nsave(\"submission_aquaplanet_mountain.png\", ans) # hide\nnothing # hide","category":"page"},{"location":"submissions/","page":"List of submissions","title":"List of submissions","text":"(Image: submission: aquaplanet_mountain)","category":"page"},{"location":"submissions/#Tim-Reichelt:-North-Sea-mountain","page":"List of submissions","title":"Tim Reichelt: North Sea mountain","text":"","category":"section"},{"location":"submissions/","page":"List of submissions","title":"List of submissions","text":"path: /submissions/north_sea_mountain.jl","category":"page"},{"location":"submissions/","page":"List of submissions","title":"List of submissions","text":"rank: 13. of 16 submissions","category":"page"},{"location":"submissions/","page":"List of submissions","title":"List of submissions","text":"using CairoMakie # hide\nauthor = \"Tim Reichelt\"\ndescription = \"North Sea mountain\"\n\nusing SpeedyWeather, RainMaker\n\nspectral_grid = SpectralGrid(trunc=31, nlayers=8)\nmodel = PrimitiveWetModel(spectral_grid)\n\nrain_gauge = RainGauge(spectral_grid, lond=-1.25, latd=51.75)\nadd!(model, rain_gauge)\n\nsimulation = initialize!(model)\n\n# add a massive mountain at 51.75°N, 0°W, *after* model initialization\n# using spherical_distance for geodesic distances, use radius=360/2π for distance in degrees\nH, λ₀, φ₀, σ = 4000, 2, 51, 5     # height, lon, lat position, and width\nset!(model, orography=(λ,φ) -> H*exp(-spherical_distance((λ,φ), (λ₀,φ₀), radius=360/2π)^2/2σ^2))\n\nrun!(simulation, period=Day(20))\nRainMaker.plot(rain_gauge) # hide\nsave(\"submission_north_sea_mountain.png\", ans) # hide\nnothing # hide","category":"page"},{"location":"submissions/","page":"List of submissions","title":"List of submissions","text":"(Image: submission: north_sea_mountain)","category":"page"},{"location":"submissions/#Milan:-default","page":"List of submissions","title":"Milan: default","text":"","category":"section"},{"location":"submissions/","page":"List of submissions","title":"List of submissions","text":"path: /submissions/default.jl","category":"page"},{"location":"submissions/","page":"List of submissions","title":"List of submissions","text":"rank: 14. of 16 submissions","category":"page"},{"location":"submissions/","page":"List of submissions","title":"List of submissions","text":"using CairoMakie # hide\nauthor = \"Milan\"\ndescription = \"default\"\n\nusing SpeedyWeather, RainMaker\n\nspectral_grid = SpectralGrid(trunc=31, nlayers=8)\nmodel = PrimitiveWetModel(spectral_grid)\n\nrain_gauge = RainGauge(spectral_grid, lond=-1.25, latd=51.75)\nadd!(model, rain_gauge)\n\nsimulation = initialize!(model)\nrun!(simulation, period=Day(20))\nRainMaker.plot(rain_gauge) # hide\nsave(\"submission_default.png\", ans) # hide\nnothing # hide","category":"page"},{"location":"submissions/","page":"List of submissions","title":"List of submissions","text":"(Image: submission: default)","category":"page"},{"location":"submissions/#Milan:-Aquaplanet","page":"List of submissions","title":"Milan: Aquaplanet","text":"","category":"section"},{"location":"submissions/","page":"List of submissions","title":"List of submissions","text":"path: /submissions/aquaplanet.jl","category":"page"},{"location":"submissions/","page":"List of submissions","title":"List of submissions","text":"rank: 15. of 16 submissions","category":"page"},{"location":"submissions/","page":"List of submissions","title":"List of submissions","text":"using CairoMakie # hide\nauthor = \"Milan\"\ndescription = \"Aquaplanet\"\n\nusing SpeedyWeather, RainMaker\n\nspectral_grid = SpectralGrid(trunc=31, nlayers=8)\n\n# define aquaplanet\nocean = AquaPlanet(spectral_grid, temp_equator=302, temp_poles=273)\nland_sea_mask = AquaPlanetMask(spectral_grid)\norography = NoOrography(spectral_grid)\nmodel = PrimitiveWetModel(spectral_grid; ocean, land_sea_mask, orography)\n\nrain_gauge = RainGauge(spectral_grid, lond=-1.25, latd=51.75)\nadd!(model, rain_gauge)\n\nsimulation = initialize!(model)\nrun!(simulation, period=Day(20))\nRainMaker.plot(rain_gauge) # hide\nsave(\"submission_aquaplanet.png\", ans) # hide\nnothing # hide","category":"page"},{"location":"submissions/","page":"List of submissions","title":"List of submissions","text":"(Image: submission: aquaplanet)","category":"page"},{"location":"submissions/#Milan:-Atlantic-mountain","page":"List of submissions","title":"Milan: Atlantic mountain","text":"","category":"section"},{"location":"submissions/","page":"List of submissions","title":"List of submissions","text":"path: /submissions/atlantic_mountain.jl","category":"page"},{"location":"submissions/","page":"List of submissions","title":"List of submissions","text":"rank: 16. of 16 submissions","category":"page"},{"location":"submissions/","page":"List of submissions","title":"List of submissions","text":"using CairoMakie # hide\nauthor = \"Milan\"\ndescription = \"Atlantic mountain\"\n\nusing SpeedyWeather, RainMaker\n\nspectral_grid = SpectralGrid(trunc=31, nlayers=8)\nmodel = PrimitiveWetModel(spectral_grid)\n\nrain_gauge = RainGauge(spectral_grid, lond=-1.25, latd=51.75)\nadd!(model, rain_gauge)\n\nsimulation = initialize!(model)\n\n# add a massive mountain at 50°N, 35°W, *after* model initialization\nH, λ₀, φ₀, σ = 4000, 325, 50, 5     # height, lon, lat position, and width\nset!(model, orography=(λ,φ) -> H*exp((-(λ-λ₀)^2 - (φ-φ₀)^2)/2σ^2), add=true)\n\nrun!(simulation, period=Day(20))\nRainMaker.plot(rain_gauge) # hide\nsave(\"submission_atlantic_mountain.png\", ans) # hide\nnothing # hide","category":"page"},{"location":"submissions/","page":"List of submissions","title":"List of submissions","text":"(Image: submission: atlantic_mountain)","category":"page"},{"location":"instructions/#RainMaker-instructions","page":"Instructions","title":"RainMaker instructions","text":"","category":"section"},{"location":"instructions/","page":"Instructions","title":"Instructions","text":"While the List of submissions gives you some idea of what you can do make it rain more or less in a SpeedyWeather simulation, the following provides more instructions and serves as an introduction to atmospheric modelling with SpeedyWeather.","category":"page"},{"location":"instructions/","page":"Instructions","title":"Instructions","text":"You can analyse precipitation as a time series (Visualising RainGauge measurements) or as a global map accumulated during the simulation (Visualising accumulated rainfall globally).","category":"page"},{"location":"instructions/#General-workflow-to-run-SpeedyWeather","page":"Instructions","title":"General workflow to run SpeedyWeather","text":"","category":"section"},{"location":"instructions/","page":"Instructions","title":"Instructions","text":"There's more information in the SpeedyWeather documentation but in short there are 4 steps","category":"page"},{"location":"instructions/","page":"Instructions","title":"Instructions","text":"using SpeedyWeather\n\n# 1. define the resolution\nspectral_grid = SpectralGrid(trunc=31, nlayers=8)\n\n# 2. create a model\nmodel = PrimitiveWetModel(spectral_grid)\n\n# 3. initialize the model\nsimulation = initialize!(model)\n\n# 4. run the model\nrun!(simulation, period=Day(10))","category":"page"},{"location":"instructions/","page":"Instructions","title":"Instructions","text":"You can add a RainGauge to measure precipitation, but the following will focus on ways you can change the model, impacting what's been simulated. They may or may not have a large impact on the simulated precipitation but that is up to you to figure out.","category":"page"},{"location":"instructions/#Change-the-resolution","page":"Instructions","title":"Change the resolution","text":"","category":"section"},{"location":"instructions/","page":"Instructions","title":"Instructions","text":"SpeedyWeather is a spectral model. That means it internally represents its variables as coefficients of horizontal waves on the sphere (the spherical harmonics) up to a certain maximum wavenumber that is usually referred to as truncation. So for a truncation of 31, SpeedyWeather would resolve wavenumbers 0 to 31, but not 32 and larger. The higher the truncation the higher the resolution  and automatically chosen higher resolution of the grid. You control the resolution through the keyword argument trunc of the SpectralGrid object that defines the resolution of a simulation","category":"page"},{"location":"instructions/","page":"Instructions","title":"Instructions","text":"using SpeedyWeather\nspectral_grid =  SpectralGrid(trunc=42)","category":"page"},{"location":"instructions/","page":"Instructions","title":"Instructions","text":"Now change trunc (e.g. 31, 42, 63, 85, 127) and check what happens to precipitation when you run a simulation at that resolution. You can also change the number of vertical layers with the keyword argument nlayers, e.g.","category":"page"},{"location":"instructions/","page":"Instructions","title":"Instructions","text":"spectral_grid =  SpectralGrid(trunc=31, nlayers=5)","category":"page"},{"location":"instructions/","page":"Instructions","title":"Instructions","text":"Note however, that too many vertical layers can make the model unstable because of the (simpler) vertical advection that is used. This is not the place to elaborate on that, but just to warn you that nlayers=100 is unlikely to \"just work\". Try to find out more generally, with changing trunc and nlayers","category":"page"},{"location":"instructions/","page":"Instructions","title":"Instructions","text":"How does the grid spacing change?\nHow does the speed of the simulation change?","category":"page"},{"location":"instructions/","page":"Instructions","title":"Instructions","text":"Bonus question","category":"page"},{"location":"instructions/","page":"Instructions","title":"Instructions","text":"Why 31, 42, 63, ... as given above? For more details see Available horizontal resolutions and Matching spectral and grid resolution\nHow are the vertical layers spaced? Check spectral_grid.vertical_coordinates and read on Sigma coordinates","category":"page"},{"location":"instructions/#Change-the-grid","page":"Instructions","title":"Change the grid","text":"","category":"section"},{"location":"instructions/","page":"Instructions","title":"Instructions","text":"While SpeedyWeather is a spectral model not all computations are done in spectral space, many are still done in grid space. That's why people often call this method also pseudo-spectral. You can control the grid through the argument Grid","category":"page"},{"location":"instructions/","page":"Instructions","title":"Instructions","text":"spectral_grid =  SpectralGrid(trunc=31, Grid=FullGaussianGrid)","category":"page"},{"location":"instructions/","page":"Instructions","title":"Instructions","text":"Try FullGaussianGrid, FullClenshawGrid, OctahedralGaussianGrid, or HEALPixGrid among others. Do they have any impact on the simulated precipitation? More generally","category":"page"},{"location":"instructions/","page":"Instructions","title":"Instructions","text":"Which grids have more, which fewer (horizontal) grid points at a given trunc?\nOn each grid, are the grid cells globally of similar size or not?\nVisualise the grids!","category":"page"},{"location":"instructions/","page":"Instructions","title":"Instructions","text":"Bonus question","category":"page"},{"location":"instructions/","page":"Instructions","title":"Instructions","text":"A higher/lower dealiasing increases/decreases the grid resolution without changes the spectral resolution. Why would one do that?","category":"page"},{"location":"instructions/#Change-the-time-step","page":"Instructions","title":"Change the time step","text":"","category":"section"},{"location":"instructions/","page":"Instructions","title":"Instructions","text":"The time step of SpeedyWeather is controlled through the time stepping method of the model. This model component needs to know the spatial resolution to pick a time step by default that is stable, but you can still control this. SpeedyWeather's time integration is based on the Leapfrog scheme, so you create such a component like this","category":"page"},{"location":"instructions/","page":"Instructions","title":"Instructions","text":"time_stepping = Leapfrog(spectral_grid, Δt_at_T31=Minute(20))","category":"page"},{"location":"instructions/","page":"Instructions","title":"Instructions","text":"where the argument Δt_at_T31 determines the timestep Δt (write \\Delta then hit tab) relative to a truncation of 31 (called T31), the actual time step is then in Δt_sec, scaled linearly from T31 to whatever resolution you chose. You can provide any Second, Minute, Hour (but note that there is a stability limit above which your simulation quickly blows up). But do not forget to also pass this component to the model constructor, i.e.","category":"page"},{"location":"instructions/","page":"Instructions","title":"Instructions","text":"model = PrimitiveWetModel(spectral_grid; time_stepping)\nnothing # hide","category":"page"},{"location":"instructions/","page":"Instructions","title":"Instructions","text":"where ; time_stepping matches a keyword argument time_stepping with the variable of the same name. This is equivalent to , time_stepping=time_stepping.","category":"page"},{"location":"instructions/","page":"Instructions","title":"Instructions","text":"How large a time step can you choose for a T31 resolution?\nHow does the speed or simulation time change with a changed time step?","category":"page"},{"location":"instructions/","page":"Instructions","title":"Instructions","text":"Bonus question","category":"page"},{"location":"instructions/","page":"Instructions","title":"Instructions","text":"How do you choose a sensible time step?","category":"page"},{"location":"instructions/#Change-the-season","page":"Instructions","title":"Change the season","text":"","category":"section"},{"location":"instructions/","page":"Instructions","title":"Instructions","text":"Some boundary conditions of SpeedyWeather depend by default on the time of the year, these are","category":"page"},{"location":"instructions/","page":"Instructions","title":"Instructions","text":"sea and land surface temperatures\nsoil moisture","category":"page"},{"location":"instructions/","page":"Instructions","title":"Instructions","text":"changing the start time of your simulation therefore will have an impact on precipitation. At the moment no boundary conditions change with the year. You can change this start time when the model is initialized, i.e.","category":"page"},{"location":"instructions/","page":"Instructions","title":"Instructions","text":"simulation = initialize!(model, time=DateTime(2000, 8, 1))\nsimulation.prognostic_variables.clock","category":"page"},{"location":"instructions/","page":"Instructions","title":"Instructions","text":"With the last line you can inspect the clock object that keeps track of time.","category":"page"},{"location":"instructions/","page":"Instructions","title":"Instructions","text":"Why would precipitation be higher or lower in different seasons?","category":"page"},{"location":"instructions/#Change-the-orography","page":"Instructions","title":"Change the orography","text":"","category":"section"},{"location":"instructions/","page":"Instructions","title":"Instructions","text":"You can change the orography in several different ways, the most convenient is probably using the set! function with anonymous functions (λ,φ) -> ... of longitude lambda and latitude varphi as outlined here. In brief, after model initialization (otherwise orography would also be initialized, overwriting your changes)","category":"page"},{"location":"instructions/","page":"Instructions","title":"Instructions","text":"# set to a global constant\nset!(model, orography=0)\n\n# add two 2000m ridges at +-30˚E from 60˚S to 60˚N \nH, λ₀, φmax = 2000, 15, 60\nset!(model, orography=(λ,φ) -> 2λ₀ < λ < 360-2λ₀ || abs(φ) > φmax ? 0 : H*sind(180*λ/2λ₀)^2)\n\n# add a zonal ridge between 60˚E and 300˚E\nset!(model, orography=(λ,φ) -> λ > 4λ₀ && λ < 360-4λ₀ && abs(φ) < 20 ? H*cosd(3φ)^2 : 0, add=true)\n\n# add two Gaussian mountains\nλ1, λ2  = (120, 240)    # longitude positions [˚E]\nφ₀ = 45                 # latitude [˚N]\nσ = 5                   # width [˚]\n\n# first mountain, radius=360/2π to have distance in ˚ again (not meters)\nset!(model, orography=(λ,φ) -> H*exp(-spherical_distance((λ,φ), (λ1,φ₀), radius=360/2π)^2/2σ^2), add=true)\n\n# and add second\nset!(model, orography=(λ,φ) -> H*exp(-spherical_distance((λ,φ), (λ2,φ₀), radius=360/2π)^2/2σ^2), add=true)","category":"page"},{"location":"instructions/","page":"Instructions","title":"Instructions","text":"Whatever orography you construct, you can always check it with","category":"page"},{"location":"instructions/","page":"Instructions","title":"Instructions","text":"using CairoMakie\nheatmap(model.orography.orography, title=\"Orography [m]: Is it supposed to be a smiley?\")\nsave(\"smiley.png\", ans) # hide\nnothing # hide","category":"page"},{"location":"instructions/","page":"Instructions","title":"Instructions","text":"(Image: Orography)","category":"page"},{"location":"instructions/#Change-the-land-sea-mask","page":"Instructions","title":"Change the land-sea mask","text":"","category":"section"},{"location":"instructions/","page":"Instructions","title":"Instructions","text":"Similar to the orography you can change the land-sea mask. Find some more details here. Note that the land-sea mask does not have to agree with the orography, yes you can put an ocean on the top of Mount Everest! However, surface fluxes over land (as determined by the land-sea mask) are zero if the respective surface fields are NaN there. Meaning if you want to put an ocean on the top of Mount Everest you also will need to define the sea surface temperature there.","category":"page"},{"location":"instructions/","page":"Instructions","title":"Instructions","text":"For example, we could flood the southern hemisphere with","category":"page"},{"location":"instructions/","page":"Instructions","title":"Instructions","text":"# this will be automatically clamped back into [0, 1]\nset!(model, land_sea_mask=(λ, φ) -> φ < 0 ? -1 : 0, add=true)\n\nheatmap(model.land_sea_mask.mask, title=\"Land-sea mask with a southern hemisphere ocean\")\nsave(\"sh_ocean.png\", ans) # hide\nnothing # hide","category":"page"},{"location":"instructions/","page":"Instructions","title":"Instructions","text":"(Image: SH Ocean)","category":"page"},{"location":"instructions/#Change-the-surface-temperatures","page":"Instructions","title":"Change the surface temperatures","text":"","category":"section"},{"location":"instructions/","page":"Instructions","title":"Instructions","text":"By default, SpeedyWeather uses seasonally changing sea and land surface temperature coming from climatology, you can check this with","category":"page"},{"location":"instructions/","page":"Instructions","title":"Instructions","text":"model.ocean","category":"page"},{"location":"instructions/","page":"Instructions","title":"Instructions","text":"and for land","category":"page"},{"location":"instructions/","page":"Instructions","title":"Instructions","text":"model.land","category":"page"},{"location":"instructions/","page":"Instructions","title":"Instructions","text":"while you can use set!(simulation, sea_surface_temperature=...) to tweak the sea surface temperature (and similar for land_surface_temperature. both in Kelvin) as long as the model.ocean and model.land are set to seasonally changing your efforts will be quickly overwritten in the next time step as the \"ocean model\" and the \"land model\" component of SpeedyWeather evolve following the seasonal cycle. For a 20-day simulation these changes are not big, but mean you need to switch off that seasonal cycle and use constant temperatures instead. You do this with","category":"page"},{"location":"instructions/","page":"Instructions","title":"Instructions","text":"ocean = AquaPlanet(spectral_grid)","category":"page"},{"location":"instructions/","page":"Instructions","title":"Instructions","text":"and ","category":"page"},{"location":"instructions/","page":"Instructions","title":"Instructions","text":"land = ConstantLandTemperature(spectral_grid)","category":"page"},{"location":"instructions/","page":"Instructions","title":"Instructions","text":"which you can then pass on to the model constructor","category":"page"},{"location":"instructions/","page":"Instructions","title":"Instructions","text":"model = PrimitiveWetModel(spectral_grid; ocean, land)\nnothing # hide","category":"page"},{"location":"instructions/","page":"Instructions","title":"Instructions","text":"Now you have basically \"frozen\" the sea and land surface temperature in time, meaning you can tweak them with set! as before. For example, we could add a 2K in the \"North Atlantic\" with","category":"page"},{"location":"instructions/","page":"Instructions","title":"Instructions","text":"simulation = initialize!(model)\nset!(model, land_sea_mask=0)    # all ocean!\nset!(simulation, sea_surface_temperature=(λ, φ) -> (30 < φ < 60) && (270 < λ < 360) ? 2 : 0, add=true)\n\nsst = simulation.prognostic_variables.ocean.sea_surface_temperature\nheatmap(sst, title=\"SST with +2K in North Atlantic\")\nsave(\"sst_2K.png\", ans) # hide\nnothing # hide","category":"page"},{"location":"instructions/","page":"Instructions","title":"Instructions","text":"(Image: SST +2K)","category":"page"},{"location":"instructions/","page":"Instructions","title":"Instructions","text":"and similar for the land_surface_temperature in which case you would need to set the land-sea mask to 1 though, otherwise, while the land surface temperature is defined, there is not any land!","category":"page"},{"location":"instructions/#Change-the-initial-conditions","page":"Instructions","title":"Change the initial conditions","text":"","category":"section"},{"location":"instructions/","page":"Instructions","title":"Instructions","text":"Changing the initial conditions is somewhat more advanced but gives you way more options is therefore added here in case you want to be creative. But you can also use it to create an ensemble by simply adding some small random noise and check how quickly the trajectories diverge (butterfly effect) or check whether in any member it rains more or less. The prognostic variables are","category":"page"},{"location":"instructions/","page":"Instructions","title":"Instructions","text":"relative vorticity vor units of 1/s, typical values are 5 to 10e-5 for high and low pressure (which sign is which?) systems\ndivergence div, units of 1/s, similar scale\ntemperature temp, units of K\nlogarithm of surface pressure pres in units of Pascal, with typical values of 960-1040hPa before the logarithm\nhumidity humid, units of kg/kg, tropical surface values reach order of 10 g/kg.","category":"page"},{"location":"instructions/","page":"Instructions","title":"Instructions","text":"You can set them with","category":"page"},{"location":"instructions/","page":"Instructions","title":"Instructions","text":"set!(simulation, humid=0)","category":"page"},{"location":"instructions/","page":"Instructions","title":"Instructions","text":"to start with a dry atmosphere for example (how long does it take to rain when you do that?). You can use the same set! options as before, so maybe you can figure out","category":"page"},{"location":"instructions/","page":"Instructions","title":"Instructions","text":"how to add a storm?\nhow to start in a heatwave?","category":"page"},{"location":"instructions/","page":"Instructions","title":"Instructions","text":"Some more information on setting the initial conditions can be found here.","category":"page"},{"location":"new_to_julia/#New-to-Julia?","page":"New to Julia?","title":"New to Julia?","text":"","category":"section"},{"location":"new_to_julia/","page":"New to Julia?","title":"New to Julia?","text":"The following lists some useful links if you are new to Julia and want to use RainMaker.jl and SpeedyWeather.jl for education or research.","category":"page"},{"location":"new_to_julia/#Install-Julia","page":"New to Julia?","title":"Install Julia","text":"","category":"section"},{"location":"new_to_julia/","page":"New to Julia?","title":"New to Julia?","text":"First of all you have to install Julia, the recommended way is using the installation manager for Julia called Juliaup, see here","category":"page"},{"location":"new_to_julia/","page":"New to Julia?","title":"New to Julia?","text":"Install Julia","category":"page"},{"location":"new_to_julia/#Julia-kernel-for-Jupyter-notebooks","page":"New to Julia?","title":"Julia kernel for Jupyter notebooks","text":"","category":"section"},{"location":"new_to_julia/","page":"New to Julia?","title":"New to Julia?","text":"Then you may want to use Julia inside Jupyter Notebooks (the \"Ju\" in \"Jupyter\" is for Julia!) for this you need to install IJulia which you can do through Julia's built-in package manager Pkg.jl, this is as easy as","category":"page"},{"location":"new_to_julia/","page":"New to Julia?","title":"New to Julia?","text":"julia> ] add IJulia","category":"page"},{"location":"new_to_julia/","page":"New to Julia?","title":"New to Julia?","text":"where ] opens the package manger. After this installing a Julia kernel for Jupyter is just","category":"page"},{"location":"new_to_julia/","page":"New to Julia?","title":"New to Julia?","text":"julia> using IJulia\njulia> installkernel(\"Julia\")","category":"page"},{"location":"new_to_julia/","page":"New to Julia?","title":"New to Julia?","text":"and you can choose \"Julia\" as a kernel in a Jupyter notebook.","category":"page"},{"location":"new_to_julia/#Julia-documentation,-tutorials-and-community-resources","page":"New to Julia?","title":"Julia documentation, tutorials and community resources","text":"","category":"section"},{"location":"new_to_julia/","page":"New to Julia?","title":"New to Julia?","text":"JuliaLang documentation, particularly\nDifferences from Matlab/R/Python\nLearn Julia in y minutes\nJulia's discourse forum\nJoin the Julia slack and Zulip channel\nJulia's YouTube channel\nTutorials and books","category":"page"},{"location":"new_to_julia/#SpeedyWeather-documentation","page":"New to Julia?","title":"SpeedyWeather documentation","text":"","category":"section"},{"location":"new_to_julia/","page":"New to Julia?","title":"New to Julia?","text":"Because RainMaker.jl is built on top of SpeedyWeather.jl do have a look at the documentation therein which explains how to run and modify SpeedyWeather.","category":"page"},{"location":"new_to_julia/","page":"New to Julia?","title":"New to Julia?","text":"SpeedyWeather.jl documentation","category":"page"},{"location":"submit/#Submit-to-the-RainMaker-challenge","page":"Submit","title":"Submit to the RainMaker challenge","text":"","category":"section"},{"location":"submit/","page":"Submit","title":"Submit","text":"The easiest is to have a look a existing submissions listed in List of submissions and get some inspirations what else to change from RainMaker instructions. Submit by creating a pull request adding a julia script file_name.jl in the folder /submissions of the repository. This script contains your SpeedyWeather model setup including instructions to run the model so that the RainGauge records for 20 days for a 20-day challenge.","category":"page"},{"location":"submit/","page":"Submit","title":"Submit","text":"After executing this script there needs to be in the global scope of that script the following variables defined","category":"page"},{"location":"submit/","page":"Submit","title":"Submit","text":"a rain_gauge::RainGauge having measured precipitation\nan author::String, e.g. author = \"Kermit the Frog\"\na description::String describing your model setup in a few words, e.g. description = \"No orography\"","category":"page"},{"location":"submit/","page":"Submit","title":"Submit","text":"with those exact variable names. You can define anything else you want, e.g. rain_gauge2 but only rain_gauge would be used to evaluate your submission to the challenge. The rain gauge rain_gauge needs to be added to a SpeedyWeather simulation as outlined in Adding RainGauge as callback. The author and description strings are used in the List of submissions and the Leaderboard.","category":"page"},{"location":"submit/#Rules","page":"Submit","title":"Rules","text":"","category":"section"},{"location":"submit/","page":"Submit","title":"Submit","text":"All precipitation measured by the rain gauge has to be simulated by SpeedyWeather over a 20-day period.\nThe rain gauge must be placed at the agreed longitude and latitude coordinates.\nNo changes to the following physics inside SpeedyWeather: Large-scale condensation, convection, surface evaporation, or radiation.\nSea and land surface temperatures cannot exceed 305K anywhere during the simulation.\nThe simulation must remain stable over the 20-day period.","category":"page"},{"location":"","page":"Home","title":"Home","text":"CurrentModule = RainMaker","category":"page"},{"location":"#RainMaker","page":"Home","title":"RainMaker","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for RainMaker, a repository to measure precipitation inside a SpeedyWeather.jl simulation.","category":"page"},{"location":"","page":"Home","title":"Home","text":"Contents","category":"page"},{"location":"","page":"Home","title":"Home","text":"Installation\nNew to Julia?\nRainGauge\nRainMaker instructions\nSubmit to the RainMaker challenge\nRainMaker leaderboard\nList of submissions","category":"page"},{"location":"#Installation","page":"Home","title":"Installation","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"RainMaker.jl is an official Julia package, so to install the latest version you can simply type","category":"page"},{"location":"","page":"Home","title":"Home","text":"julia> ] add RainMaker","category":"page"},{"location":"","page":"Home","title":"Home","text":"Where ] opens Julia's package manager Pkg.jl which changes the prompt to (@v1.11) pkg>, exit the package manager with backspace. Pkg.jl is also a package itself, so you can alternatively do","category":"page"},{"location":"","page":"Home","title":"Home","text":"using Pkg\nPkg.add(\"RainMaker\")","category":"page"},{"location":"","page":"Home","title":"Home","text":"RainMaker.jl depends on (among others)","category":"page"},{"location":"","page":"Home","title":"Home","text":"SpeedyWeather.jl\nMakie.jl and its backend CairoMakie for plotting","category":"page"},{"location":"","page":"Home","title":"Home","text":"While they are automatically installed, you will also want to install SpeedyWeather explicitly via","category":"page"},{"location":"","page":"Home","title":"Home","text":"julia> ] add SpeedyWeather","category":"page"},{"location":"","page":"Home","title":"Home","text":"or, again, using Pkg; Pkg.add(\"SpeedyWeather\"). So that ","category":"page"},{"location":"","page":"Home","title":"Home","text":"using SpeedyWeather","category":"page"},{"location":"","page":"Home","title":"Home","text":"also just works as dependencies are otherwise hidden for direct usage.","category":"page"},{"location":"leaderboard/#RainMaker-leaderboard","page":"Leaderboard","title":"RainMaker leaderboard","text":"","category":"section"},{"location":"leaderboard/","page":"Leaderboard","title":"Leaderboard","text":"The RainMaker leaderboard ranks submissions in /submissions to the RainMaker challenge by the amount of precipitation measured in a given location and over a certain period. To Submit to the RainMaker challenge see that section of the docs and particular the rules and formalities explained within. Also see List of submissions for a list of all submissions, their respective code and RainMaker plots Visualising RainGauge measurements.","category":"page"},{"location":"leaderboard/#Leaderboard","page":"Leaderboard","title":"Leaderboard","text":"","category":"section"},{"location":"leaderboard/","page":"Leaderboard","title":"Leaderboard","text":"Rank Author Description Location Total precipitation [mm] Share convection [%] Period [days]\n1 Charlotte Merchant The Rapture: Big Super Mega Ultra Clapped Humid North Sea Mountain HR Injection Under More Pressure Initially and Corrected 51.75˚N, -1.25˚E 1474816896.000 0.0 20\n2 Danny Ash, Jowan Fromentin - Brain Drain Rain Rain go away 51.75˚N, -1.25˚E 1483583.875 0.0 20\n3 Amy and breddy Reddy4rain 51.75˚N, 358.75˚E 138940.344 0.0 20\n4 Isaac Campbell Up initial humidity and lower saturation vapour pressure. 51.75˚N, -1.25˚E 2435.623 0.0 20\n5 Alex Dobra and Charlotte Wargniez Aqua planet, change humidity to ridiculous number, add Shirin's mountain, make it cold 51.75˚N, -1.25˚E 2381.228 2.1 20\n6 Minqi humid & montain 51.75˚N, -1.25˚E 2085.014 0.0 20\n7 Maren Hot aqua planet with SST anomalie 51.75˚N, -1.25˚E 1941.052 0.0 20\n8 George default 51.75˚N, -1.25˚E 1930.696 0.0 20\n9 Thomas Stone Humid 51.75˚N, -1.25˚E 1795.274 0.0 20\n10 Bradley and Lukas big humid 51.75˚N, -1.25˚E 1795.182 1.1 20\n11 Jordan Up initial humidity and lower saturation vapour pressure. 51.75˚N, -1.25˚E 1565.332 0.0 20\n12 Shirin Ermis Aqua-planet simulation with a mountain 51.75˚N, -1.25˚E 67.565 19.1 20\n13 Tim Reichelt North Sea mountain 51.75˚N, -1.25˚E 52.138 0.3 20\n14 Milan default 51.75˚N, -1.25˚E 31.958 80.5 20\n15 Milan Aquaplanet 51.75˚N, -1.25˚E 22.958 89.8 20\n16 Milan Atlantic mountain 51.75˚N, -1.25˚E 18.755 74.1 20","category":"page"},{"location":"rain_gauge/#RainGauge","page":"RainGauge","title":"RainGauge","text":"","category":"section"},{"location":"rain_gauge/","page":"RainGauge","title":"RainGauge","text":"RainMaker.jl exports the callback RainGauge, a rain gauge that you can place inside a SpeedyWeather simulation to measures precipitation at a given location. The following explains how to use this RainGauge callback. ","category":"page"},{"location":"rain_gauge/","page":"RainGauge","title":"RainGauge","text":"With a SpectralGrid from SpeedyWeather.jl (see here) you can create RainGauge (it needs to know the spectral grid to interpolate from gridded fields to a given location). In most cases you will probably want to specify the rain gauge's location with lond (0...360˚E, -180...180˚E also work) and latd (-90...90˚N)`","category":"page"},{"location":"rain_gauge/","page":"RainGauge","title":"RainGauge","text":"using SpeedyWeather, RainMaker\n\nspectral_grid = SpectralGrid()  # default resolution\nrain_gauge = RainGauge(spectral_grid, lond=358.75, latd=51.75)","category":"page"},{"location":"rain_gauge/","page":"RainGauge","title":"RainGauge","text":"(also see ?RainGauge for more information). The measurement_counter starts at 0 and just counts up the number of measurements the rain gauge has made, one per timestep – zero also means that the gauge is not initialized. In order to reconstruct the time axis the fields tstart and Δt are used but they will be automatically set when initialized given the time step in the model. At any time you can always reset!(rain_gauge) in order to reset the counter, time and all rainfall measurements. But a RainGauge is also mutable, meaning you can do this by hand too, e.g. rain_gauge.accumulated_rain_large_scale .= 0.","category":"page"},{"location":"rain_gauge/","page":"RainGauge","title":"RainGauge","text":"RainGauge has two vectors accumulated_rain_large_scale and accumulated_rain_convection where every entry is one measurement of the given precipitation type at the specified location. One measurement is taken after every time step of the model simulation. In order to preallocate these vectors we use max_measurements as length, meaning those are the maximum number of measurements that will be taken. An info is thrown when this point is reached and also an instance of RainGauge printed to the terminal shows you how many years of measurements you can take and how much of that measurement \"memory\" is already used, see above. If you want to measure for longer periods you may need to increase max_measurements by setting it as a keyword argument, e.g. RainGauge(spectral_grid, max_measurements=1_000_000)","category":"page"},{"location":"rain_gauge/#Adding-RainGauge-as-callback","page":"RainGauge","title":"Adding RainGauge as callback","text":"","category":"section"},{"location":"rain_gauge/","page":"RainGauge","title":"RainGauge","text":"The RainGauge is implemented as a <: SpeedyWeather.AbstractCallback (<: means \"subtype of\"). A Callback is an object (technically a struct introducing a new type that belongs to the supertype AbstractCallback) with methods defined that are executed after every time step of the model. A callback therefore allows you to inject any piece of code into a simulation. Many callbacks are \"diagnostic\" meaning they just read out variables but you could also define \"intrusive\" callbacks that change the model or the simulation while it is running (not covered here but see Intrusive callbacks).","category":"page"},{"location":"rain_gauge/","page":"RainGauge","title":"RainGauge","text":"A RainGauge can be added to a model with add!","category":"page"},{"location":"rain_gauge/","page":"RainGauge","title":"RainGauge","text":"model = PrimitiveWetModel(spectral_grid)\nadd!(model, rain_gauge)","category":"page"},{"location":"rain_gauge/","page":"RainGauge","title":"RainGauge","text":"Note that you can create many different (or same) RainGauges and add them all to your model in the same way. This way you can place several \"weather stations\" across the globe and measure simultaneously. Note that you will need to create several independent RainGauges for that, adding the same RainGauge several times to the model is unlikely what you will want to do (it will measure several times the same precipitation after each time step).","category":"page"},{"location":"rain_gauge/","page":"RainGauge","title":"RainGauge","text":"You can also delete! a RainGauge (or any callback) again, but you need to know its key for that which is printed to screen when added or just inspect","category":"page"},{"location":"rain_gauge/","page":"RainGauge","title":"RainGauge","text":"model.callbacks","category":"page"},{"location":"rain_gauge/","page":"RainGauge","title":"RainGauge","text":"then with delete!(model.callbacks, :callback_????) where :callback_???? is a Symbol (an immutable string) identifying the callback you want to delete.","category":"page"},{"location":"rain_gauge/#Continuous-measurements-across-simulations","page":"RainGauge","title":"Continuous measurements across simulations","text":"","category":"section"},{"location":"rain_gauge/","page":"RainGauge","title":"RainGauge","text":"While you can reset!(::RainGauge) your rain gauge manually every time, this will not happen automatically for a new simulation if the rain gauge has already measured. This is so that you can run one simulation, look at the rain gauge measurements and then continue the simulation. Let's try this by running two 10-day simulations.","category":"page"},{"location":"rain_gauge/","page":"RainGauge","title":"RainGauge","text":"simulation = initialize!(model)\nmodel.feedback.verbose = false # hide\nrun!(simulation, period=Day(10))\nrain_gauge","category":"page"},{"location":"rain_gauge/","page":"RainGauge","title":"RainGauge","text":"Yay, the rain gauge has measured precipitation, now let us continue","category":"page"},{"location":"rain_gauge/","page":"RainGauge","title":"RainGauge","text":"run!(simulation, period=Day(10))\nrain_gauge","category":"page"},{"location":"rain_gauge/","page":"RainGauge","title":"RainGauge","text":"which adds another 10 days of measurements as if we had simulated directly 20 days.","category":"page"},{"location":"rain_gauge/#Visualising-RainGauge-measurements","page":"RainGauge","title":"Visualising RainGauge measurements","text":"","category":"section"},{"location":"rain_gauge/","page":"RainGauge","title":"RainGauge","text":"While you always see a summary of a RainGauge printed to the REPL, we can also visualise all measurements nicely with Makie.jl. Because RainMaker.jl has this package as a dependency (particulary the CairoMakie backend) the only thing to do is calling the RainMaker.plot function. We do not export plot as it easily conflicts with other packages exporting a plot function.","category":"page"},{"location":"rain_gauge/","page":"RainGauge","title":"RainGauge","text":"using CairoMakie # hide\nRainMaker.plot(rain_gauge)\nsave(\"rain_gauge.png\", ans) # hide\nnothing # hide","category":"page"},{"location":"rain_gauge/","page":"RainGauge","title":"RainGauge","text":"(Image: Rain gauge plot)","category":"page"},{"location":"rain_gauge/","page":"RainGauge","title":"RainGauge","text":"The RainMaker.plot functions takes as optional keyword argument rate_Δt::Period so that you can change the binwidth of the precipitation rate. Above we have one bin every 6 hours (the default), showing the average rate over the previous 6 hours. You can visualise the hourly precipitation rate with","category":"page"},{"location":"rain_gauge/","page":"RainGauge","title":"RainGauge","text":"RainMaker.plot(rain_gauge, rate_Δt=Hour(1))\nsave(\"rain_gauge2.png\", ans) # hide\nnothing # hide","category":"page"},{"location":"rain_gauge/","page":"RainGauge","title":"RainGauge","text":"(Image: Rain gauge plot, hourly rate)","category":"page"},{"location":"rain_gauge/","page":"RainGauge","title":"RainGauge","text":"which just gives you a more fine-grained picture. Arguments can be Hour(::Real), Minute(::Real), Day(::Real) but note that the default model time step at default resolution is 30min, so you do not get any more information when going lower than that.","category":"page"},{"location":"rain_gauge/#Visualising-accumulated-rainfall-globally","page":"RainGauge","title":"Visualising accumulated rainfall globally","text":"","category":"section"},{"location":"rain_gauge/","page":"RainGauge","title":"RainGauge","text":"SpeedyWeather simulations diagnose the accumulated rainfall internally. Which is actually what a RainGauge reads out on every time step at the specified location (but see details in Discarding spin-up). This means you can also visualise a map of the accumulated rainfall since the beginning of the simulation to better understand regional rainfall patterns. SpeedyWeather uses largely SI units internally, but RainGauge converts meters to millimeters because that is the more common unit for rainfall. If we read out SpeedyWeather's fields manually we therefore have to do this conversion manually too. Total precipitation is the sum of convective and large-scale precipitation which we can calculate and visualise like this","category":"page"},{"location":"rain_gauge/","page":"RainGauge","title":"RainGauge","text":"# (; a, b) = struct unpacks the fields a, b in struct identified by name, equivalent to\n# a = struct.a and b = struct.b\n(; precip_large_scale, precip_convection) = simulation.diagnostic_variables.physics\ntotal_precipitation = precip_large_scale + precip_convection\ntotal_precipitation *= 1000    # convert m to mm\n\nusing CairoMakie\nheatmap(total_precipitation, title=\"Total precipitation [mm], accumulated\")\nsave(\"total_precip_map.png\", ans) # hide\nnothing # hide","category":"page"},{"location":"rain_gauge/","page":"RainGauge","title":"RainGauge","text":"(Image: Map of total accumulated precipitation)","category":"page"},{"location":"rain_gauge/","page":"RainGauge","title":"RainGauge","text":"You can also visualise these fields individually. The accumulation starts when the model is initialized with simulation = initialize!(model) which constructs variables, initialized with zeros, too. This means the accumulation will continue across several run! calls unless you manually set it back via","category":"page"},{"location":"rain_gauge/","page":"RainGauge","title":"RainGauge","text":"simulation.diagnostic_variables.physics.precip_large_scale .= 0\nsimulation.diagnostic_variables.physics.precip_convection .= 0\nnothing # hide","category":"page"},{"location":"rain_gauge/","page":"RainGauge","title":"RainGauge","text":"The . here is important to specify the broadcasting of the scalar 0 on the right to the array on the left. This was not needed in *= 1000 above as scalar times vector/matrix is mathematicall already well defined.","category":"page"},{"location":"rain_gauge/#Discarding-spin-up","page":"RainGauge","title":"Discarding spin-up","text":"","category":"section"},{"location":"rain_gauge/","page":"RainGauge","title":"RainGauge","text":"A RainGauge starts measuring accumulated rainfall relative to the first run!(simulation) call after it has been added to the model with add!, see Adding RainGauge as callback. This means that you can run a simulation without a RainGauge and then only start measuring precipitation after some time has passed. You can use this to discard any spin-up ( = adjustment after initial conditions) of a simulation. Let us illustrate this","category":"page"},{"location":"rain_gauge/","page":"RainGauge","title":"RainGauge","text":"model = PrimitiveWetModel(spectral_grid)\n\n# add one rain gauge the measures the whole simulation\nrain_gauge_from_beginning  = RainGauge(spectral_grid, lond=-1.25, latd=51.75)\nadd!(model, rain_gauge_from_beginning)\n\nsimulation = initialize!(model)\nrun!(simulation, period=Week(1))\n\n# add another rain gauge that only starts measuring\n# after that week we already simulated\nrain_gauge_after_spinup  = RainGauge(spectral_grid, lond=-1.25, latd=51.75)\nadd!(model, rain_gauge_after_spinup)\nrun!(simulation, period=Day(10))\n\n# now compare them, from the beginning\nrain_gauge_from_beginning","category":"page"},{"location":"rain_gauge/","page":"RainGauge","title":"RainGauge","text":"versus","category":"page"},{"location":"rain_gauge/","page":"RainGauge","title":"RainGauge","text":"# rain gauge after a 1-week spinup\nrain_gauge_after_spinup","category":"page"},{"location":"rain_gauge/","page":"RainGauge","title":"RainGauge","text":"As you can see their clocks differ and so does the measured precipitation!","category":"page"},{"location":"rain_gauge/#Functions-and-types","page":"RainGauge","title":"Functions and types","text":"","category":"section"},{"location":"rain_gauge/","page":"RainGauge","title":"RainGauge","text":"","category":"page"},{"location":"rain_gauge/","page":"RainGauge","title":"RainGauge","text":"Modules = [RainMaker]","category":"page"},{"location":"rain_gauge/#RainMaker.RainGauge","page":"RainGauge","title":"RainMaker.RainGauge","text":"Measures convective and large-scale precipitation across time at one given location with linear interpolation from model grids onto lond, latd. Fields are \n\nlond::Float64: [OPTION] Longitude [0 to 360˚E] where to measure precipitation.\nlatd::Float64: [OPTION] Latitude [-90˚ to 90˚N] where to measure precipitation.\ninterpolator::Any: [OPTION] To interpolate precipitation fields onto lond, latd.\nmax_measurements::Int64: [OPTION] Maximum number of time steps used to allocate memory.\nmeasurement_counter::Int64: [OPTION] Measurement counter (one per time step), starting at 0 for uninitialized.\ntstart::DateTime: Start time of gauge.\nΔt::Second: Spacing between time steps.\naccumulated_rain_large_scale_start::Any: Accumulated large-scale precipitation [mm] in the simulation at the beginning of rain gauge measurements.\naccumulated_rain_convection_start::Any: Accumulated large-scale precipitation [mm] in the simulation at the beginning of rain gauge measurements.\naccumulated_rain_large_scale::Vector: Accumulated large-scale precipitation [mm].\naccumulated_rain_convection::Vector: Accumulated convective precipitation [mm].\n\n\n\n\n\n","category":"type"},{"location":"rain_gauge/#RainMaker.plot-Tuple{RainGauge}","page":"RainGauge","title":"RainMaker.plot","text":"plot(gauge::RainGauge; rate_Δt) -> Figure\n\n\nPlot accumulated precipitation and precipitation rate across time for gauge::RainGauge from RainMaker.jl. rate_Δt specifies the interval used to bin the precipitation rate, while units are always converted to mm/day. Default is 6 hours.\n\n\n\n\n\n","category":"method"},{"location":"rain_gauge/#RainMaker.reset!-Tuple{RainGauge, PrognosticVariables, DiagnosticVariables, AbstractModel}","page":"RainGauge","title":"RainMaker.reset!","text":"reset!(\n    gauge::RainGauge,\n    progn::PrognosticVariables,\n    diagn::DiagnosticVariables,\n    model::AbstractModel\n)\n\n\nReset gauge::RainGauge to its initial state, but use time and Δt from clock.\n\n\n\n\n\n","category":"method"},{"location":"rain_gauge/#RainMaker.reset!-Tuple{RainGauge}","page":"RainGauge","title":"RainMaker.reset!","text":"reset!(gauge::RainGauge) -> RainGauge\n\n\nReset gauge::RainGauge to its initial state, i.e. set measurement_counter to 0, tstart to DEFAULT_DATE, Δt to DEFAULT_ΔT, and set accumulated precipitation vector to zeros.\n\n\n\n\n\n","category":"method"},{"location":"rain_gauge/#SpeedyWeather.callback!-Tuple{RainGauge, PrognosticVariables, DiagnosticVariables, AbstractModel}","page":"RainGauge","title":"SpeedyWeather.callback!","text":"callback!(\n    gauge::RainGauge,\n    progn::PrognosticVariables,\n    diagn::DiagnosticVariables,\n    model::AbstractModel\n)\n\n\nCallback definition for gauge::RainGauge from RainMaker.jl. Interpolates large-scale and convective precipitation to the gauge's storage vectors and converts units from m to mm. Stops measuring if the max_measurements are reached which is printed only once as info.\n\n\n\n\n\n","category":"method"},{"location":"rain_gauge/#SpeedyWeather.initialize!-Tuple{RainGauge, Vararg{Any}}","page":"RainGauge","title":"SpeedyWeather.initialize!","text":"initialize!(\n    gauge::RainGauge,\n    args...\n) -> Union{Nothing, RainGauge}\n\n\nInitialize gauge::RainGauge by calling reset!(::RainGauge) but only if gauge is not already initialized (gauge.measurement_counter > 0), so that it can be re-used across several simulation runs.\n\n\n\n\n\n","category":"method"}]
}
